<!doctype html>
<html lang="en">
    <head>
        {{&std_head}}

        <style>
            .container {
                width: 60%;
                height: 100%;
                margin: 0 auto;
            }
            .heading {
                padding-bottom: 1em;
                text-align: center;
            }
            #ping-btn {
                text-align: center;
                margin: 0 auto;
            }
            #map {
                text-align: center;
                margin: 0 auto;
            }

            .custom-marker{
                transition: all ease .5s;
                    display: block;
                    position: relative;
                    content: '';
                .custom-marker-inner {
                    background-color: black;
                    color: white;
                    position: absolute;
                    bottom: 36px;
                    left: -50px;
                    z-index: 3;
                    text-align:center;
                    margin: auto auto;
                        display: block;
                        width: 100px;
                        height: 30px;
                        background: #fff;
                        border-radius: 10% 10% 0% 10%;
                        box-shadow: 1px 1px 2px rgba(0,0,0,.2);
                }
        }
        </style>
    </head>
    <body>
        {{&navbar}}
        <br>
        <div class="container">
            <div class="jumbotron">
                <h1 class="heading">
                    View Distress Pings
                    <hr>
                </h1>
                <div class="row">
                    <div class="col-8">
                        <div id="map" style="width: 100%; height: 400px;"></div>
                    </div>
                    <div class="col-4">
                        <button id="loading-indicator" class="btn btn-sm btn-warning">
                            <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate">Loading...</span>
                        </button>
                        <div class="text-center">
                            <button id="ping-btn" class="btn btn-lg btn-primary" onclick="retrievePings()" disabled>Refresh</button>
                        </div>
                        <div id="msg-container" class="card text-white bg-danger mb-3" style="max-width: 20rem;" hidden>
                            <div class="card-body">
                            <h4 class="card-title">Encountered Some Trouble</h4>
                                <p class="card-text" id="msg-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        <script>
            function degreesToRadians(degrees) {
                return degrees * Math.PI / 180;
            }

            function distanceInMeters(lat1, lon1, lat2, lon2) {
                var earthRadiusKm = 6371;

                var dLat = degreesToRadians(lat2-lat1);
                var dLon = degreesToRadians(lon2-lon1);

                lat1 = degreesToRadians(lat1);
                lat2 = degreesToRadians(lat2);

                var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
                        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);
                var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
                return earthRadiusKm * c * 1000;
            }

            window.post = function(url, data) {
                return fetch(url, {method: "POST", body: JSON.stringify(data)});
            }

            VelocityMarker = function(latlng, map, vel, time1, time2, args) {
                this.latlng = latlng;
                this.args = args;
                this.map_ = map;
                this.vel = vel;
                this.setMap(map);
                this.time1 = time1;
                this.time2 = time2;
            }

            function gpsFailed(err) {
                // Sad!
            }

            var gpsSettings = { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 };
            var markers = null;
            var themap = null;
            var lines = null;
            var velmarkers = null;

            function initMap() {
                function onSuccess(position) {
                    console.log(position);
                    VelocityMarker.prototype = new google.maps.OverlayView();

                    VelocityMarker.prototype.onAdd = function() {
                        var self = this;
                        var div = this.div;
                        if (!div) {
                            // Generate marker html
                            div = this.div = document.createElement('div');
                            div.className = 'velocity-marker';
                            div.style.position = 'absolute';
                            var innerDiv = document.createElement('div');
                            innerDiv.className = 'velocity-marker-inner';
                            if (this.vel > .1) {
                            innerDiv.innerHTML += "<div class='alert alert-primary'>" + Math.round( 100 * (this.vel  * 60) ) / 100 + " meters / minute <br>" +
                             this.time1 + " - " + this.time2  + " </div>";
                             } else {
                                innerDiv.innerHTML += "<div class='alert alert-primary'>" +
                             this.time1 + " - " + this.time2  + " </div>";
                             }
                            div.appendChild(innerDiv);

                            if (typeof(self.args.marker_id) !== 'undefined') {
                                div.dataset.marker_id = self.args.marker_id;
                            }

                            google.maps.event.addDomListener(div, "click", function(event) {
                                google.maps.event.trigger(self, "click");
                            });

                            var panes = this.getPanes();
                            panes.overlayImage.appendChild(div);
                        }
                    };

                    VelocityMarker.prototype.draw = function() {
                        if (this.div) {
                            let position = new google.maps.LatLng(this.latlng.lat, this.latlng.lng);
                            var pos = this.getProjection().fromLatLngToDivPixel(position);
                            this.div.style.left = pos.x + 'px';
                            this.div.style.top = pos.y + 'px';
                        }
            };

            VelocityMarker.prototype.getPosition = function() {
                return this.latlng;
            };

                    var startingPosition = { lat: position.coords.latitude, lng: position.coords.longitude };
                    themap = new google.maps.Map(document.getElementById('map'), { zoom: 15, center: startingPosition });
                    document.getElementById("ping-btn").disabled = false;
                    markers = [];
                    retrievePings();
                }
                var startingLocation = null;
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(onSuccess, function() {}, { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 });
                } else {
                }
            }


            function retrievePings() {
                console.log('AA');
                $('#loading-indicator').show();
                var lineSymbol = { path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW };
                function onSuccess(position) {
                    post("/pings/" + position.coords.latitude + "/" + position.coords.longitude).then(function(res) {
                        console.log(res);
                        res.text().then(function(json) {
                            var pings = JSON.parse(json);
                            if (markers != null)
                                for (var index in markers) {
                                    markers[index].setVisible(false);
                                }
                            if (lines != null)
                                for (var index in lines) {
                                    lines[index].setVisible(false);
                                }
                            if (velmarkers != null)
                                for (var index in velmarkers)
                                    velmarkers[index].setVisible(false);
                            lines = [];
                            markers = [];
                            velmarkers = [];
                            console.log(pings);
                            for (var id in pings) {
                                var pingswithid = pings[id];
                                var positionList = [];
                                for (var pingIndex in pingswithid) {
                                    var ping = pingswithid[pingIndex];
                                    var pos = { lat: ping.lat, lng: ping.lon };
                                    positionList.push(pos);
                                    markers.push(new google.maps.Marker({ position: pos, map: themap }));
                                }
                                if (pingswithid.length > 1) {
                                    for (var pingIndex = 0; pingIndex < pingswithid.length - 1; pingIndex += 1) {
                                        var p1 = pingswithid[pingIndex];
                                        var p2 = pingswithid[pingIndex + 1]
                                        var pos = { lat: (p1.lat + p2.lat) / 2, lng: (p1.lon + p2.lon) / 2 };
                                        var date1 = new Date(p1.timestamp * 1000);
                                        var date2 = new Date(p2.timestamp * 1000);
                                        var time1 = date1.getHours() + ":" + ("0" + date1.getMinutes()).substr(-2)
                                        + ":" + ("0" + date1.getSeconds()).substr(-2);
                                        var time2 = date2.getHours() + ":" + ("0" + date2.getMinutes()).substr(-2)
                                        + ":" + ("0" + date2.getSeconds()).substr(-2);
                                        // This gives vel in m/s
                                        var velocity = distanceInMeters(p1.lat, p1.lon, p2.lat, p2.lon) / (p2.timestamp - p1.timestamp);
                                        var marker = new VelocityMarker(
                                            pos,
                                            themap,
                                            velocity,
                                            time1,
                                            time2,
                                            {}
                                        );
                                        console.log(marker);
                                        marker.draw();
                                        velmarkers.push(marker);
                                    }

                                    lines.push(new google.maps.Polyline({
                                        path: positionList,
                                        icons: [{ icon: lineSymbol, offset: '100%' }],
                                        map: themap
                                    }));
                                }
                            }
                            $('#loading-indicator').hide();
                        }, function(err) {});
                    }, function(err) {});
                }
                if (navigator.geolocation) {
                    var position = navigator.geolocation.getCurrentPosition(onSuccess, function() {}, {});
                }
            }
        </script>

        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
        <script async defer src="https://maps.googleapis.com/maps/api/js?key={{&api_key}}&v=weekly&callback=initMap"></script>
    </body>
</html>
